env:
  MAVEN_FLAGS: -B --no-transfer-progress
  MAVEN_OPTS: -Xmx2G -XX:+ExitOnOutOfMemoryError -Dmaven.wagon.rto=60000 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
    -Dmaven.wagon.http.retryHandler.count=3
jobs:
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: github.event.inputs.perform_version == ''
      name: Checkout code
      uses: actions/checkout@v2
    - continue-on-error: true
      if: github.event.inputs.perform_version != ''
      name: Checkout full repository
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - continue-on-error: true
      env:
        BUILD_TOKEN: ${{ secrets.BUILD_TOKEN }}
        BUILD_USER: ${{ secrets.BUILD_USER }}
      name: Setup git user
      run: 'git config --global user.email "contact@killbill.io"

        git config --global user.name "Kill Bill core team"

        git config --global url."https://${BUILD_USER}:${BUILD_TOKEN}@github.com/".insteadOf
        "git@github.com:"

        '
    - continue-on-error: true
      name: Configure Java
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - continue-on-error: true
      name: Configure Sonatype mirror
      uses: s4u/maven-settings-action@v2.3.0
      with:
        mirrors: '[{"id": "oss-releases", "name": "Sonatype releases", "mirrorOf":
          "*", "url": "https://oss.sonatype.org/content/repositories/releases/"}]'
    - continue-on-error: true
      name: Download Java dependencies
      run: 'mvn ${MAVEN_FLAGS} clean install dependency:resolve dependency:resolve-plugins
        -DskipTests=true -Dgpg.skip=true -Psonatype-oss-release

        '
    - continue-on-error: true
      if: github.event.inputs.parent_version != ''
      name: Update killbill-oss-parent
      run: 'echo "Updating killbill-oss-parent pom.xml to ${{ github.event.inputs.parent_version
        }}:"

        mvn ${MAVEN_FLAGS} versions:update-parent -DgenerateBackupPoms=false -DparentVersion="[${{
        github.event.inputs.parent_version }}]"

        echo "killbill-oss-parent pom.xml changes:"

        git --no-pager diff

        echo "Downloading new dependencies:"

        mvn ${MAVEN_FLAGS} -U clean install -DskipTests=true


        git add pom.xml

        # Will be pushed as part of the release process, only if the release is successful

        git commit -m "pom.xml: update killbill-oss-parent to ${{ github.event.inputs.parent_version
        }}"

        '
    - continue-on-error: true
      name: Configure settings.xml for release
      uses: actions/setup-java@v1
      with:
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
        java-version: 11
        server-id: ossrh-releases
        server-password: OSSRH_PASS
        server-username: OSSRH_USER
    - continue-on-error: true
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
        OSSRH_USER: ${{ secrets.OSSRH_USER }}
      if: github.event.inputs.perform_version == ''
      name: Release artifacts
      run: 'mvn ${MAVEN_FLAGS} release:clean release:prepare release:perform

        '
    - continue-on-error: true
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
        OSSRH_USER: ${{ secrets.OSSRH_USER }}
      if: github.event.inputs.perform_version != ''
      name: Perform release
      run: 'echo "scm.url=scm\:git\:git@github.com\:${GITHUB_REPOSITORY}.git" > release.properties

        echo "scm.tag=${{ github.event.inputs.perform_version }}" >> release.properties

        mvn ${MAVEN_FLAGS} release:perform

        '
name: release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
